import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import './MoimDetail.css';
import { faList} from '@fortawesome/free-solid-svg-icons';
// import { faArrowUpFromBracket as share} from '@fortawesome/free-solid-svg-icons';
import { faEllipsisVertical} from '@fortawesome/free-solid-svg-icons';
import { faHeart as fullHeart} from '@fortawesome/free-solid-svg-icons'; // Ïã§ÏÑ†ÏúºÎ°ú Îêú ÌïòÌä∏ ÏïÑÏù¥ÏΩò
import { faHeart as lineHeart} from '@fortawesome/free-regular-svg-icons'; // ÎπÑÏñ¥ÏûàÎäî ÌïòÌä∏ ÏïÑÏù¥ÏΩò
import { useEffect, useRef, useState } from 'react';
import face from '../HomeComponent/ReviewComponent/face.svg';
import { Carousel } from 'react-bootstrap';
import MoimDetailHome from './MoimDetailComponent/MoimDetail-Home';
import MoimDetailBoard from './MoimDetailComponent/MoimDetail-Board';
import MoimDetailGellery from './MoimDetailComponent/MoimDetail-Gallery';
import MoimDetailChat from './MoimDetailComponent/MoimDetail-Chat';
import { useParams } from 'react-router-dom';
import axiosInstance from '../axiosInstance';
import LoginPzModal from '../Login/LoginPzModalComponent/LoginPzModal';
import MoimDetailMoimInfoModal from './MoimDetailComponent/MoimDetailInnerComponent/MoimDetail-MoimInfo-Modal';
import { is, tr } from 'date-fns/locale';

const MoimDetail = ({isAuth, userInfo, setUserInfo, moimInfo, setMoimInfo,currentPage, setCurrentPage, moimCommAfter,setMoimCommAfter})=>{


  // APPÏóêÏÑú ÏßÄÏ†ïÌïú url ‚Üí /moim/detail/:id Î≥ÄÏàòÏù¥Î¶ÑÏùÑ 'id'Î°ú Ï†ÄÏû•Ìï¥Ïïº urlÌååÎùºÎØ∏ÌÑ∞ Í∞íÏùÑ Ï†úÎåÄÎ°ú Í∞ÄÏ†∏Ïò¨ Ïàò ÏûàÏùå
  const {id} = useParams(); // URL ÌååÎùºÎØ∏ÌÑ∞Ïù∏ id Í∞íÏùÑ Í∞ÄÏ†∏Ïò¥ (Î∞òÌôòÎêòÎäî Í∞íÏù¥ Í∞ùÏ≤¥ÌòïÌÉúÏó¨ÏÑú Í∞ùÏ≤¥ ÌòïÌÉúÏù∏ {idÎ°ú Î∞õÏïÑÏ§òÏïºÌï®})
  const moimId = Number(id);  // ÌååÎùºÎØ∏ÌÑ∞Î°ú Î∞õÏùÄ idÎ•º Ïà´ÏûêÎ°ú Î≥ÄÍ≤Ω
  // const [moimCommAfter, setMoimCommAfter] = useState(false); // Î™®ÏûÑ Í≤åÏãúÍ∏Ä ÏûëÏÑ± ÌõÑ ÌéòÏù¥ÏßÄ Ïù¥ÎèôÏùÑ ÏúÑÌï¥ ÏÇ¨Ïö©

  
  // Ï¢ãÏïÑÏöî ÏÉÅÌÉú Ï†ÄÏû•ÌïòÎäî Ïä§ÌÖåÏù¥Ìä∏
  const [likedMoims, setLikedMoims] = useState(false); // Ï¥àÍ∏∞Í∞íÏùÑ falseÎ°ú ÏÑ§Ï†ï
  // Î°úÍ∑∏Ïù∏ Ïú†Ï†ÄÏôÄ Î™®ÏûÑÏû•Ïù¥ ÏùºÏπòÌïòÎäîÏßÄ Ïó¨Î∂Ä (üò°üò°Î™®ÏûÑÏû•, Îß§ÎãàÏ†Ä, Î™®ÏûÑÏõê Ïó¨Î∂Ä ÏûàÏñ¥Ïïº Ìï†Í±∞ Í∞ôÏùÄÎç∞üò°üò°)
  const [moimMemberRole, setMoimMemberRole] = useState(null);
  // Î™®ÏûÑÎ©§Î≤Ñ Î¶¨Ïä§Ìä∏
  const [moimMemberList,setMoimMemberList] = useState(null);
  // Î™®ÏûÑ Í∏∞Î≥∏ Ï†ïÎ≥¥ ÏàòÏ†ïÌïòÎäî Î™®Îã¨ 
  const [showMoimInfoSettingModal, setShowMoimInfoSettingModal] = useState(false);
  // Î°úÍ∑∏Ïù∏ ÏïàÌñàÏùÑÎïå Î™®Îã¨Ï∞Ω 
  const [showLoginModal, setShowLoginModal] = useState(false); 


  // Î™®ÏûÑÏ†ïÎ≥¥ Î∞õÏïÑÏò§Îäî effect
  useEffect(()=>{
    axiosInstance.get(`/moimInfo/${id}`)
    .then((response) => {
      setMoimInfo(response.data); // Î™®ÏûÑ Ï†ïÎ≥¥ Ï†ÄÏû•
    })
    .catch((error) => {
        console.log(error);
    });
  },[id,setMoimInfo,isAuth]);
  

//Î™®ÏûÑ Î©§Î≤Ñ Í∞ÄÏ†∏Ïò§ÎäîÍ±∞
useEffect(()=>{
  axiosInstance.get(`/getMoimMemberList/${id}`)
  .then((response)=>{
    setMoimMemberList(response.data);
  }).catch((error)=>{
    console.log(error);
  }
)
},[id,setMoimMemberList]);

 // Î™®ÏûÑ Í∞ÄÏûÖ Ìï∏Îì§Îü¨
 const joinMoimHandler =()=>{
  if(isAuth && userInfo){ //(Î°úÍ∑∏Ïù∏ Ïú†Î¨¥, Ïú†Ï†Ä Ï†ïÎ≥¥ ÌôïÏù∏)
    axiosInstance.post(`/joinMoim/${id}`, userInfo.id)
    .then((response)=>{
      setMoimMemberList(response.data); // userinfo Ïª¥Ìè¨ÎÑåÌä∏Ïóê member Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
      window.alert("Í∞ÄÏûÖÏôÑÎ£å!");
    }).catch((error)=>{
      console.log(error);
    });
  }else{
    setShowLoginModal(true);
  }
}

  // Î™®ÏûÑ Ï¢ãÏïÑÏöî Ïó¨Î∂Ä ÏÑ∏ÌåÖ
useEffect(()=>{
  if(isAuth){
    if (userInfo && userInfo.likedMoim) { //userInfo.likedMoimÎäî ÏÉàÎ°úÍ≥†Ïπ®ÎêêÏùÑÎïå Î°úÍ∑∏Ïù∏ ÌíÄÎ¶¨Î©¥ÏÑú ÏÉùÍ∏∞Îäî Ïò§Î•ò Î∞©ÏßÄÎ°ú Ï∂îÍ∞ÄÎê®
     setLikedMoims(userInfo.likedMoim.includes(moimId));
   } else {
     setLikedMoims(false); // ÎπÑÏñ¥ÏûàÎäî Î∞∞Ïó¥Î°ú Ï¥àÍ∏∞Ìôî
   }
  }else{
    setLikedMoims(false); // ÎπÑÏñ¥ÏûàÎäî Î∞∞Ïó¥Î°ú Ï¥àÍ∏∞Ìôî
  }
},[userInfo,isAuth, moimId]);


// Î™®ÏûÑ roleÌôïÏù∏
useEffect(()=>{
  const matchingMember = moimMemberList?.find(memberInfo => memberInfo.member.id === userInfo.id);
  if(!matchingMember){ //Î°úÍ∑∏Ïù∏ ÏïàÌïòÍ±∞ÎÇò, ÌöåÏõêÏù¥ ÏïÑÎãå Í≤ΩÏö∞
    setMoimMemberRole('notMember');
    return;
  }

  switch(matchingMember.memberRole) {
    case 'leader' : setMoimMemberRole('leader'); break;
    case 'manager' : setMoimMemberRole('manager'); break;
    case 'member' : setMoimMemberRole('member'); break;
  }
},[isAuth, userInfo, moimMemberList]);


// console.log(moimMemberRole);


  //  ‚≠êÎ™®ÏûÑ Ï¢ãÏïÑÏöî Î≤ÑÌäº Ìï∏Îì§Îü¨
  const handleMoimLikeBtn = () => {
    // Ï¢ãÏïÑÏöî Í∏∞Îä•ÏùÄ Î°úÍ∑∏Ïù∏ ÎêòÏñ¥ÏûàÎäî ÏÉÅÌÉúÎßå ÏûëÎèôÎê®
    if(isAuth){
      // ÏÑúÎ≤ÑÏóêÏÑú Î∞õÏïÑÎëî Ï¢ãÏïÑÏöî Î™®ÏûÑÏ¢ãÏïÑÏöî Ïó¨Î∂ÄÍ∞Ä trueÎ©¥ Ìï¥Îãπ Î≤àÌò∏Î•º Ï†úÍ±∞ÌïòÍ≥†, falseÎ©¥ Ï¢ãÏïÑÏöî Î¶¨Ïä§Ìä∏Ïóê Ï∂îÍ∞Ä
      const upDateLikedMoims = likedMoims ? userInfo.likedMoim.filter(data => data !==moimId) : [...userInfo.likedMoim, moimId];
      // Ìï¥Îãπ Ï¢ãÏïÑÏöî Î™®ÏûÑ Î¶¨Ïä§Ìä∏Î•º userInfoÏóê ÏóÖÎç∞Ïù¥Ìä∏
      const member = { ...userInfo, likedMoim: upDateLikedMoims };
      axiosInstance.post('/upDateLikedMoim',member)
      .then((response)=>{
        setUserInfo(response.data); // userinfo Ïª¥Ìè¨ÎÑåÌä∏Ïóê member Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
      }).catch((error)=>{
        console.log(error);
      });
      
    }else{ // Î°úÍ∑∏Ïù∏ÎêòÏñ¥ÏûàÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ Î°úÍ∑∏Ïù∏ ÏïàÎÇ¥ Î™®Îã¨ ÎùÑÏö∞Îäî Ïä§ÌÖåÏù¥Ìä∏ Í∞í Î≥ÄÍ≤Ω(Ìï¥Îãπ Ïª¥Ìè¨ÎÑåÌä∏Îäî Ïû¨ÌôúÏö© Í∞ÄÎä•)
      setShowLoginModal(true);
    }
  };



  // üò°ÏûÑÏãú_Ï∫êÎü¨ÏÖÄ Ïù¥ÎØ∏ÏßÄ Ï∂îÌõÑ ÎßÅÌÅ¨ ÌÜµÌï¥ÏÑú ÎåÄÏ≤¥Ìï¥ÏïºÌï®üò°
  const banner = [1, 2, 3, 4, 5];
  const [activeIndex, setActiveIndex] = useState(0);  // Î∂ÄÌä∏Ïä§Ìä∏Îû© Ï∫êÎü¨ÏÖÄ selectÎêú Î≤àÌò∏ Ï†ÄÏû•ÌïòÎäî Ïä§ÌÖåÏù¥Ìä∏
  const handleBanner = (selectedIndex) => { // onSelectÎê†ÎïåÎßàÎã§ Î∞îÎÄê selectIndexÎ•º ÏúÑÏóê Ïä§ÌÖåÏù¥Ìä∏Ïóê Ï†ÄÏû•Ìï¥Ï§å
    setActiveIndex(selectedIndex);
  };

  const moimDetailMenu = ['Ìôà', 'Í≤åÏãúÌåê', 'Í∞§Îü¨Î¶¨', 'Ï±ÑÌåÖ'];
  const [moimMenuCk, setMoimMenuCk] = useState('Ìôà');
  const moimMenuCkHandler = (e) =>{
    setMoimMenuCk(e.target.textContent); // valueÎ°ú ÎΩëÏúºÎãàÍπå Í∞íÏù¥ ÏïàÎÇòÏôÄÏÑú textContentÎ°ú Î≥ÄÍ≤Ω
  }

  // ÏÉÅÏÑ∏ ÌéòÏù¥ÏßÄ Î©îÎâ¥ Î∞îÍºàÏùÑÎïåÎßàÎã§ ÌôîÎ©¥ ÏµúÏÉÅÎã®ÏúºÎ°ú Î∞îÍæ∏Í∏∞
  useEffect(() => {
    if (!moimCommAfter && window.innerWidth <= 875) {
      window.scroll(0, 0);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps 
  }, [moimMenuCk]); // moimCommAfterÎ•º ÏùòÏ°¥ÏÑ± Î∞∞Ïó¥Ïóê Ìè¨Ìï®ÌïòÎ©¥ ÏúÑÏπò Ïù¥ÎèôÏù¥ ÏïàÎê®....
  

  // üò°ÏûÑÏãú Î™®ÏûÑÎîîÌÖåÏùº ÌéòÏù¥ÏßÄ ÎÇ¥ÏóêÏÑú Í≤åÏãúÌåê, Í∞§Îü¨Î¶¨, Ï±ÑÌåÖÎì±ÏúºÎ°ú Ïù¥Îèô Ïãú ÏÉàÎ°úÍ≥†Ïπ®ÌñàÏùÑÎïå ÌéòÏù¥ÏßÄ Ïú†ÏßÄÎ•º ÏúÑÌï®
  useEffect(() => {
    // Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎßàÏö¥Ìä∏Îê† Îïå Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú Í∞íÏùÑ Í∞ÄÏ†∏Ïò¥
    const savedMenuCk = localStorage.getItem('moimMenuCk');
    if (savedMenuCk) {
      setMoimMenuCk(savedMenuCk);
    }
  }, []);

  useEffect(() => {
    // Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä Ïñ∏ÎßàÏö¥Ìä∏Îê† Îïå ÌòÑÏû¨ Î©îÎâ¥ ÏÉÅÌÉúÎ•º Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï†ÄÏû•
    localStorage.setItem('moimMenuCk', moimMenuCk);
    return () => {
      // Ïñ∏ÎßàÏö¥Ìä∏ ÏãúÏóêÎäî ÌÅ¥Î¶∞ÏóÖ Ìï®ÏàòÏóêÏÑú Ï†ÄÏû•Îêú Í∞í ÏÇ≠Ï†ú
      localStorage.removeItem('moimMenuCk');
    };
  }, [moimMenuCk]);


 

  // Î™®ÏûÑ Í≤åÏãúÍ∏Ä ÏûëÏÑ± ÌõÑ ÌéòÏù¥ÏßÄ Ïù¥ÎèôÏùÑ ÏúÑÌï¥ ÏÉùÏÑ±
  useEffect(()=>{
    if(moimCommAfter){
      setMoimMenuCk('Í≤åÏãúÌåê');
    }
  },[moimCommAfter,setMoimMenuCk]);


  // Î™®ÏûÑÍ∏∞Î≥∏ Î©îÎâ¥
  const leaderMoimSettingMenu = ['Î™®ÏûÑ Ï†ïÎ≥¥ ÏàòÏ†ï', 'Î™®ÏûÑ ÎßÅÌÅ¨ Î≥µÏÇ¨', 'Î™®ÏûÑ ÏÇ≠Ï†ú'];
  const memberMoimSettingMenu = ['Î™®ÏûÑ ÎßÅÌÅ¨ Î≥µÏÇ¨','Î™®ÏûÑ ÌÉàÌá¥'];
  const settingMenuRef = useRef(null); //  settingMenu ÏöîÏÜåÎ•º Ï∞∏Ï°∞

  
  // Î™®ÏûÑÍ∏∞Î≥∏ Î©îÎâ¥ ÏïÑÏù¥ÏΩò ÎàåÎ†ÄÎäîÏßÄ Ïó¨Î∂Ä
  const [moimSettingIcon, setMoimSettingIcon] = useState(false);
  useEffect(()=>{ //Î°úÍ∑∏Ïù∏ ÌíÄÎ¶¨Î©¥ Îã´ÏúºÎ†§Í≥† Ï∂îÍ∞Ä
    if(!isAuth){setMoimSettingIcon(false);}
  },[isAuth]);

  // settingMenu Ïô∏Ïùò ÏòÅÏó≠ÏùÑ ÌÅ¥Î¶≠Ìï† Îïå settingMenuÎ•º Îã´Í∏∞
  const handleOutsideClick = (e) => {
    if (!settingMenuRef.current || !settingMenuRef.current.contains(e.target)) {
      setMoimSettingIcon(false);
    }
  };

  const MoimSettingMenuHandler = (e)=>{ 
    let menu =e.target.textContent;
    switch(menu){
      case "Î™®ÏûÑ Ï†ïÎ≥¥ ÏàòÏ†ï": setShowMoimInfoSettingModal(true);
      case "Î™®ÏûÑ ÎßÅÌÅ¨ Î≥µÏÇ¨": 
        navigator.clipboard.writeText(window.location.href)
          .then(() => {
            alert("ÎßÅÌÅ¨Í∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§."); 
          })
          .catch(err => {
            console.error("ÎßÅÌÅ¨ Î≥µÏÇ¨Ïóê Ïã§Ìå®ÌïòÏòÄÏäµÎãàÎã§.", err); 
          });
      break;
      case "Î™®ÏûÑ ÏÇ≠Ï†ú" : 
        const deleteMoim = window.confirm("Ï†ïÎßê Î™®ÏûÑÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?");
        // if(deleteMoim){
        //   Ïó¨Í∏∞Ïóê Î™®ÏûÑ ÏÇ≠Ï†ú ÏÑúÎ≤Ñ ÏöîÏ≤≠ÌïòÍ∏∞
        // }
      break;
      case "Î™®ÏûÑ ÌÉàÌá¥" : 
        const quitMoim = window.confirm("Ï†ïÎßê Î™®ÏûÑÏùÑ ÌÉàÌá¥ÌïòÏãúÍ≤†ÏäµÎãàÍπå?");
        if(quitMoim){
          const moimMemberId = moimMemberList?.find(memberInfo => memberInfo.member.id === userInfo.id).id;
          axiosInstance.delete(`/quitMoim/${moimMemberId}`)
          .then((response)=>{
            alert(response.data);
            setMoimMemberList(prevList => prevList.filter(member => member.id !== moimMemberId)); // moimMemberListÏïàÏóê ÏûàÎäî idÍ∞íÍ≥º ÏùºÏπòÌïòÎäîÍ±∞ Ï†úÍ±∞
            // window.location.reload(); // ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ® (Í∑∏ÎûòÏïº ÌÉàÌá¥Î∞òÏòÅÎê®)
          }).catch((error)=>{
            console.log(error);
          });
        }
      break;
    }
  }

  console.log(moimMemberList);
  return(
    <div className='MoimDetail-container' onClick={handleOutsideClick}>

      <div className='moimDetail-headerBox'>
        <div className='moimDetail-header-beforeBtn'>{/* Î™©Î°ù */}
          <FontAwesomeIcon icon={faList} size='lg'style={{color: '#6a60a9'}}/>
        </div>
        <div className='moimDetail-header-category'>{moimInfo.category}</div>
        <div className='moimDetail-header-title'>{moimInfo.moimname}</div>
      </div>

      <div className='moimDetail-moimMenu-box-moblie'>
        {
          moimDetailMenu.map((data, i)=>(
            <div className={`moimDetail-moimMenu ${moimMenuCk === data ? 'moimDetail-moimMenu-ck': ''}`} 
                 onClick={moimMenuCkHandler} key={i}>
            {data}</div>
          ))
        }
      </div>

      
      <div className={`moimDetail-moimInfoBox ${moimMenuCk !== 'Ìôà' ? 'moimDetail-moimMenu-notShow' : ''}`}>
        <div className='moimDetail-moimInfo-imageBox'>
          <Carousel className='moimDetail-moimInfo-carousel' activeIndex={activeIndex} onSelect={handleBanner} interval={null}>
          {
            banner.map((num, i)=>(
              <Carousel.Item key={i} className='moimDetail-moimInfo-carousel-item'>{/*üò°Ï∂îÌõÑÏóê ÌÅ¥Î¶≠ÌñàÏùÑÎïå Î™®Îã¨ ÎùÑÏõåÏÑú ÌôïÎåÄÌï¥ÏÑú Î≥º Ïàò ÏûàÍ≤å Ìï¥ÏïºÌïòÎÇòüò°*/}
                {/* <div>{num}</div>üò°ÏûÑÏãúüò° */}
                <div className='moimDetail-thumbnail-img'
                  style={{
                    backgroundImage: `url(https://raw.githubusercontent.com/Jella-o312/modo-image/main/moim-img/moim${num}.png)`, // ‚≠êÎ≥¥Ïïà Ï†ïÏ±Ö ÎïåÎ¨∏Ïóê Ïª¥Ìì®ÌÑ∞ ÎÇ¥Î∂ÄÏóê ÏûàÎäî ÌååÏùºÎ°ú ÌÖåÏä§Ìä∏ Î∂àÍ∞Ä
                    backgroundRepeat: 'no-repeat',
                    backgroundSize: 'cover'
                  }}
                />
              </Carousel.Item>
            ))
          }
          </Carousel>
          <div className='moimDetail-moimInfo-image-num'><span></span>{activeIndex+1} / {banner.length}</div>
        </div>
        
        <div className='moimDetail-moimInfo-textBox'>          
          <div className='moimDetail-moimInfo-text1-box'>
            <div className='moimDetail-moimInfo-text1-title'>{moimInfo.moimname}</div>
            <div className='moimDetail-moimInfo-text1-like' onClick={handleMoimLikeBtn}>
              <FontAwesomeIcon icon={likedMoims ? fullHeart : lineHeart}  size='lg' style={{ color: likedMoims ? '#ff2727' : 'gray' }}/>
            </div>
            {moimMemberRole !== 'notMember' &&
              <div className='moimDetail-moimInfo-text1-RightBtn'
                  onClick={(e)=>{e.stopPropagation(); setMoimSettingIcon(!moimSettingIcon);}}             
              >
                <FontAwesomeIcon 
                  icon={faEllipsisVertical} 
                  size="lg" 
                />
                  
                  { 
                    moimSettingIcon &&
                    <div className='moimDetail-moimInfo-text1-RightBtn-icon' ref={settingMenuRef}>
                      {
                        (moimMemberRole === 'leader' ? leaderMoimSettingMenu : memberMoimSettingMenu).map((menu) => (
                          <li onClick={MoimSettingMenuHandler} 
                              style={{color: `${menu==='Î™®ÏûÑ ÏÇ≠Ï†ú' || menu ==='Î™®ÏûÑ ÌÉàÌá¥' ? 'red' : ''}`}} 
                              key={menu}
                          >{menu}</li>
                        ))
                      }
                    </div>
                  }
              </div>
            }
          </div>
          <div className='moimDetail-moimInfo-text2-shortinfo'>{moimInfo.introduction}</div>
          <div className='moimDetail-moimInfo-text3-box'>
            <div className='moimDetail-moimInfo-text3-leaderImgBox'>
              <img src={face} alt=''/>
              {/* Ï∂îÌõÑ ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ Ï†ÄÏû•ÎêòÏñ¥ ÏûàÎäî url divÎ°ú Ïó∞Í≤∞ÌïòÍ∏∞
              backgroundImage: `url(https://raw.githubusercontent.com/Jella-o312/modo-image/main/moim-img/${data.id}.png)` */}
            </div>
            <div className='moimDetail-moimInfo-text3-leaderName'> Î™®ÏûÑÏû• <span>{moimInfo?.leader?.nickname}</span></div>
          </div>
          <div className='moimDetail-moimInfo-text4-Box'>
            <div className='moimDetail-moimInfo-text4-location'>{moimInfo.city}¬∑{moimInfo.town}</div>
            <div className='moimDetail-moimInfo-text4-member'>{moimMemberList?.length} Î™Ö</div>
          </div>
          <div className='moimDetail-moimInfo-text5-Box'>
           {
            moimInfo.hashtag?.map((tag, i) => (
              <div key={i} className='moimDetail-moimInfo-text5-hashtag'># {tag}</div>
            ))
            }
          </div>
          <div className='moimDetail-moimInfo-text3-box2'> {/* Î™®Î∞îÏùºÏö© Î∞©Ïû•ÌîÑÎ°úÌïÑ */}
            <div className='moimDetail-moimInfo-text3-leaderImgBox'>
              <img src={face} alt=''/>
              {/* Ï∂îÌõÑ ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ Ï†ÄÏû•ÎêòÏñ¥ ÏûàÎäî url divÎ°ú Ïó∞Í≤∞ÌïòÍ∏∞
              backgroundImage: `url(https://raw.githubusercontent.com/Jella-o312/modo-image/main/moim-img/${data.id}.png)` */}
            </div>
            <div className='moimDetail-moimInfo-text3-leaderName'> Î™®ÏûÑÏû• <span>{moimInfo.leadername}</span></div>
          </div>
          { !moimMemberList?.some(data => data.member.id === userInfo.id) ? // moimMemberListÏïàÏóê ÏûàÎäî member Í∞ùÏ≤¥ ÏïàÏóê ÏûàÎäîidÏôÄ Ïú†Ï†Ä idÍ∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏
            <div className='moimDetail-moimInfo-joinBtn-Box'>
              <div className='moimDetail-moimInfo-joinBtn' onClick={joinMoimHandler} style={{cursor:'pointer'}}>Í∞ÄÏûÖÌïòÍ∏∞</div>
            </div>
            :
            <div className='moimDetail-moimInfo-block' style={{height: '4rem'}}/>
          }
        </div>
      </div>

      <div className='moimDetail-moimMenu-box'>
        {
          moimDetailMenu.map((data, i)=>(
            <div className={`moimDetail-moimMenu ${moimMenuCk === data ? 'moimDetail-moimMenu-ck': ''}`} 
                 onClick={moimMenuCkHandler} key={i}>
            {data}</div>
          ))
        }
      </div>

      <div className='moimDetail-moimContentBox'>
        {moimMenuCk === 'Ìôà' &&  <MoimDetailHome moimInfo={moimInfo} setMoimInfo={setMoimInfo} moimMemberRole={moimMemberRole} 
                                                 moimMemberList={moimMemberList} setMoimMemberList={setMoimMemberList}/>}
        {moimMenuCk === 'Í≤åÏãúÌåê' &&  <MoimDetailBoard moimInfo={moimInfo} currentPage={currentPage} setCurrentPage={setCurrentPage} 
                                                      moimCommAfter={moimCommAfter} setMoimCommAfter={setMoimCommAfter}/>}
        {moimMenuCk === 'Í∞§Îü¨Î¶¨' &&  <MoimDetailGellery/>}
        {moimMenuCk === 'Ï±ÑÌåÖ' &&  <MoimDetailChat/>}
      </div>
      
      <LoginPzModal showLoginModal={showLoginModal} setShowLoginModal={setShowLoginModal}/>
      <MoimDetailMoimInfoModal 
        showMoimInfoSettingModal = {showMoimInfoSettingModal}
        setShowMoimInfoSettingModal ={setShowMoimInfoSettingModal}
        moimInfo={moimInfo}
        setMoimInfo={setMoimInfo}
      />
      
    </div>
  )
}

export default MoimDetail;